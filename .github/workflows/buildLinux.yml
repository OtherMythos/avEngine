name: Build Linux

on:
  push:
    branches:  'master'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          sudo apt-get update && sudo apt-get install -y libxaw7-dev libxrandr-dev libxcb-randr0-dev libx11-dev xserver-xorg-dev xorg-dev libx11-xcb1 libxcb-res0-dev xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libgtk-3-dev patchelf
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          name: avBuiltLinux.tar.gz
          repo: OtherMythos/avBuild
          workflow: linux.yml
      - name: Download linuxdeploy
        run: |
          wget -O /usr/local/bin/linuxdeploy https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x /usr/local/bin/linuxdeploy
      - name: Expand artifact
        run: |
          tar -xvf build.tar.gz
      - name: Delink artifacts
        run: |
          cd Debug/ogre2/lib/OGRE
          patchelf --remove-needed $(patchelf --print-needed RenderSystem_GL3Plus_d.so | grep Ogre) RenderSystem_GL3Plus_d.so
          patchelf --remove-needed $(patchelf --print-needed Plugin_ParticleFX.so | grep Ogre) Plugin_ParticleFX.so
      - name: Setup CMake
        run: |
          mkdir build
          cd build
          cmake -DAV_LIBS_DIR="${{ github.workspace }}/Debug" -DCMAKE_BUILD_TYPE=Debug ..
      - name: Build
        run: |
          cd build
          cmake --build .
          ls
      - name: Package AppImage
        run: |
          cd build
          mkdir -p /tmp/outAppDir/usr/bin
          cp -r Hlms essential /tmp/outAppDir/usr/bin
          linuxdeploy --appimage-extract-and-run --appdir /tmp/outAppDir/ -e av -e RenderSystem_GL3Plus.so -e Plugin_ParticleFX.so -i setup/logo.svg -d setup/entry.desktop --output appimage