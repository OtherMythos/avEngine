name: Build Windows

on:
  push:
    branches: 'master'

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        buildType: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          name: avBuiltWindows-${{ matrix.buildType }}.zip
          repo: OtherMythos/avBuild
          workflow: windows.yml
      - name: Expand artifact
        run: |
          Expand-Archive avBuilt-windows-${{ matrix.buildType }}.zip .
      - name: Setup CMake
        run: |
          mkdir build
          cd build
          cmake -DAV_LIBS_DIR="${{ github.workspace }}/avBuilt/${{ matrix.buildType }}" -DCMAKE_BUILD_TYPE=${{ matrix.buildType }} ..
      - name: Build
        run: |
          cd build
          cmake --build . --target av --config ${{ matrix.buildType }}
      - name: Artifact avCore
        uses: actions/upload-artifact@v4
        with:
          name: avCore-${{ matrix.buildType }}.lib
          path: "${{ github.workspace }}/build/${{ matrix.buildType }}/avCore.lib"
      - name: Prepare Directory
        run: |
          cd build
          if ("${{ matrix.buildType }}" -eq "Debug") {
            rm ${{ matrix.buildType }}\av.pdb
            rm ${{ matrix.buildType }}\avCore.pdb
            rm ${{ matrix.buildType }}\git_version.pdb

            cp C:\Windows\System32\msvcp140_2d.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\msvcp140d.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\ucrtbased.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\vcruntime140d.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\vcruntime140_1d.dll ${{ matrix.buildType }}\
          }else{
            cp C:\Windows\System32\msvcp140.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\vcruntime140.dll ${{ matrix.buildType }}\
            cp C:\Windows\System32\vcruntime140_1.dll ${{ matrix.buildType }}\
          }
          rm ${{ matrix.buildType }}\avCore.exp
          rm ${{ matrix.buildType }}\avCore.lib
          rm ${{ matrix.buildType }}\git_version.lib
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: avEngineWindows-${{ matrix.buildType }}.zip
          path: "${{ github.workspace }}/build/${{ matrix.buildType }}"